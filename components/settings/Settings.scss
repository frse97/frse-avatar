@import '../../styles/theming.scss';
@import '../../styles/utils.scss';

//TODO: 
// Does variables influence perfomance? 

$sett-width-collapsed: toRem(60);
$sett-width-expanded: toRem(210);
$sett-height-collapsed: $sett-width-collapsed;
$sett-icon-wrapper-width: toRem(50);
$sett-icon-wrapper-height: $sett-icon-wrapper-width;
$sett-icon-width: toRem(36);
$sett-icon-height: $sett-icon-width;
$sett-actions-width: $ideal-width;
$sett-actions-height: $ideal-height;
$sett-actions-icon-width: toRem(30);
$sett-actions-icon-height: $sett-actions-icon-width;
$sett-actions-icon-width-big: toRem(48);
$sett-actions-icon-height-big: $sett-actions-icon-width-big;

.settings {
  height: $sett-height-collapsed;
  margin-bottom: toRem(12);
  position: absolute;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 900;
  background-color: var(--bg-color);
  -webkit-box-shadow: 0px 0px toRem(8) 0px var(--bg-color-inverted);
  -moz-box-shadow: 0px 0px toRem(8) 0px var(--bg-color-inverted);
  box-shadow: 0px 0px toRem(8) 0px var(--bg-color-inverted);
  transition: color 300ms, background-color 300ms;

  &.--collapsed {
    width: $sett-width-collapsed;
    border-radius: $sett-width-collapsed $sett-width-collapsed;
    transition: width 0.3s;
  }

  &.--expanded {
      width: $sett-width-expanded;
      border-radius: $pd-md;
      padding: $pd-xs $pd-sm;
      transition: width 0.3s;
  }

  &:hover {
    cursor: pointer;
  }

  // Icon Wrapper
  &-icon {
    width: $sett-icon-wrapper-width;
    height: $sett-icon-wrapper-height;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    background-color: transparent;
    border-radius: inherit;

    &.--expanded{
        margin-right: $mg-md;
    }

    > svg {
      width: $sett-icon-width;
      height: $sett-icon-height;
      color: var(--font-color);
      transition: color 300ms;

      &:hover {
        cursor: pointer;
        animation: spin 2s infinite linear;
        -webkit-animation: spin 2s infinite linear;
      }
    }
  }

  // Settings Actions Containers
  &-container {
    &.--collapsed {
      display: none;
    }

    &.--expanded {
      height: 100%;
      display: flex;
      align-items: center;
    }
  }

  &-action:first-child{
    margin-right: $mg-md;
  }
  
  &-action:last-child{
    margin-left: $mg-md;
  }

  &-button, &-link {
    width: $sett-actions-width;
    height: $sett-actions-height;
    border: none;
    border-radius: $sett-actions-width;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--bg-color-inverted);

    > svg{
        width: $sett-actions-icon-width;
        height: $sett-actions-icon-height;
        color: var(--bg-color);
        transition: background-color 300ms;
    }

    &:hover{
        cursor: pointer;
        width: $sett-actions-icon-width-big;
        height: $sett-actions-icon-height-big;
        border-radius: $sett-actions-icon-width-big;
    }
  }
}

//Animation
@-moz-keyframes spin {
  from {
    -moz-transform: rotate(0deg);
  }

  to {
    -moz-transform: rotate(360deg);
  }
}

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
